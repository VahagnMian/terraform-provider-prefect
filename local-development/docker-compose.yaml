version: '3.5'

networks:
  prefect:
    name: prefect


services:
  # --------------------------------------#
  #               Postgres                #
  # --------------------------------------#
  postgres:
    image: postgres:14
    command:
      - postgres
      - -c
      - max_connections=150
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: test-password
      POSTGRES_DB: prefect_server
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} | grep "accepting connections" || exit 1
      timeout: 2s
    ports:
      - published: 5433
        target: 5432
    restart: on-failure
    networks:
      - prefect
  # --------------------------------------#
  #             Prefect Server            #
  # --------------------------------------#
  prefect-server:
    image: prefecthq/prefect:2.7.10-python3.11
    command:
      - prefect
      - orion
      - start
    ports:
      - 4200:4200
    depends_on:
      postgres:
        condition: service_started
    environment:
      PREFECT_ORION_API_HOST: 0.0.0.0
      PREFECT_ORION_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:test-password@postgres:5432/prefect_server
      PREFECT_ORION_ANALYTICS_ENABLED: "false"
      PREFECT_LOGGING_SERVER_LEVEL: WARNING
      PREFECT_API_URL: http://localhost:4200/api
    networks:
      - prefect
  # --------------------------------------#
  #             Docker Agent              #
  # --------------------------------------#
#  prefect-agent:
#    image:
#    command:
#      - prefect
#      - agent
#      - start
#      - -q
#      - default
#    depends_on:
#      prefect-server:
#        condition: service_started
#    environment:
#      PREFECT_API_URL: http://prefect-server:4200/api
#      PREFECT_LOGGING_LEVEL: DEBUG
#      DOCKER_HOST: unix://var/run/docker.sock
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - prefect